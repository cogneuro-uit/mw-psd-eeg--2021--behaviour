---
title: "Model comparison"
format: pdf
editor: source
execite:
  echo: false
---

```{r Parameters, include=FALSE}
#' **RELATIVE PATH**
#' Depending on the position of the document, loading files may fail.
#' This variable enables you to set it according to where the file is. 
#' For main directory set it to "NULL", within a folder, use "../".

script_relative_path <- "../"
source( paste0(script_relative_path, "lib/load_project.R") )
load_project(script_relative_path)
```

```{r create table functions}
bayes_apply_transformation <- function(data){
  data |>
    mutate(    
    var = fct_recode(var, 
      Intercept = "Intercept",
      Threshold1 = "Intercept[1]", 
      Threshold2 = "Intercept[2]", 
      Threshold3 = "Intercept[3]", 
      Trial = "probenum_prop",  
      BV = "zlogbv",
      AE = "zlogapen", 
      `Pre-positive` = "pre_pos", 
      `Pre-negative` = "pre_neg", 
      
      #DURATION variable:
      `PSD` = "c.Adjusted_Duration.diff.pos", 
      `PSD x Trial` = "c.Adjusted_Duration.diff.pos:probenum_prop",
      `PSD x AE` = "c.Adjusted_Duration.diff.pos:zlogapen",
      `PSD x BV` = "c.Adjusted_Duration.diff.pos:zlogbv",
      `PSD x Pre-positive` = "c.Adjusted_Duration.diff.pos:pre_pos", 
      `PSD x Pre-negative` = "c.Adjusted_Duration.diff.pos:pre_neg", 
      
      # sleepdep VARIABLE:
      `PSD` = "sleepdepSD", 
      `PSD x Trial` = "sleepdepSD:probenum_prop",
      `PSD x AE` = "sleepdepSD:zlogapen",
      `PSD x BV` = "sleepdepSD:zlogbv",
      `PSD x Pre-positive` = "sleepdepSD:pre_pos", 
      `PSD x Pre-negative` = "sleepdepSD:pre_neg", 
      
      `Sigma (subjects)` = "Sigma (subjects)",
      
      LOOIC = "LOOIC", R2 = "R2") |>
      ordered(levels = c(
      "Intercept", "Threshold1", "Threshold2", "Threshold3",
      "Trial", "BV", "AE", "Pre-positive", "Pre-negative", 
      "PSD", "PSD x Trial", "PSD x BV", "PSD x AE",
      "PSD x Pre-positive", "PSD x Pre-negative",
      "Sigma (subjects)", "LOOIC", "R2"))
    ) |>
    arrange(var) |>
    mutate(m = if_else(
    as.numeric( str_replace_all(p, "[>=]","") ) > .95 & 
      (var=="Sigma (subjects)" | group=="Coefficients"),
     paste0(m,"*"), m)
  )
}

bayes_table_model <- function(model){
  
  dur_n <- mod_bay_sleep_cont[[model]][["data"]][["subj"]] |> unique() |> length()
  dic_n <- mod_mood_full[[model]][["data"]][["subj"]] |> unique() |> length()
  
  bayes_tbl_sum(
    mod_bay_sleep_cont[[model]], 
    apa_table = T, add_sigma = T, add_loo = T, add_R2 = T) |> 
    bayes_apply_transformation() |>
    rename_at(3:6, ~paste0("exc_", .x)) |>
    left_join(
      bayes_tbl_sum(mod_mood_full[[model]], 
                    apa_table = T, add_sigma = T, add_loo = T, add_R2 = T) |> 
        bayes_apply_transformation() |>
        rename_at(3:6, ~paste0("our_",.x)),
      by = c("group", "var")
    ) |> 
    mutate(
      diff = ifelse(
        str_detect(our_m, "\\*") == str_detect(exc_m, "\\*"), "", "DIFF")
    ) |>
    gt(groupname_col = "group") |>
    tab_spanner(str_glue("Duration variable (n = {dur_n})"), starts_with("exc_")) |>
    tab_spanner(str_glue("Dichotomous (n = {dic_n})"), starts_with("our_")) |>
    cols_label(
      ends_with("_m")   ~ md("*b*"),
      ends_with("_hdi") ~ md("HDI"),
      ends_with("_er")  ~ md("ER~dir~"),
      ends_with("_p")   ~ md("*p*~dir~"),
    ) |>
    cols_align("left", var) |>
    gt::tab_header(title = model)
}
```



# MW

```{r , message=FALSE, warning=FALSE}
bayes_table_model("mw")
```





# MB 

```{r , message=FALSE, warning=FALSE}
bayes_table_model("mb")
```




# SMW

```{r , message=FALSE, warning=FALSE}
bayes_table_model("smw")
```




# BV

```{r , message=FALSE, warning=FALSE}
bayes_table_model("bv")
```





# AE

```{r , message=FALSE, warning=FALSE}
bayes_table_model("ae")
```
